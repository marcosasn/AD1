dados = read.csv('NÃ£o participaram.csv', header=T)
dados = read.csv(Analise/'NÃ£o participaram.csv', header=T)
dados = read.csv(Marcos/Analise/'NÃ£o participaram.csv', header=T)
dados1 = read.csv('C:/Users/Win7/Documents/Analise/NÃ£o participaram.csv', header=T)
setwd('C:\MARCOS\Desktop')
setwd("C:\MARCOS\Desktop")
setwd("C:\Marcos\Desktop")
getwd()
dados1 = read.csv('RStudio/saed/NÃ£o participaram', header=T)
dados1 = read.csv('cd RStudio/saed/NÃ£o participaram', header=T)
dados1 = read.csv('RStudio/saed/NÃ£o participaram', header=T)
dados1 = read.csv('RStudio/saed/NÃ£o participaram.csv', header=T)
dados1 = read.csv('NÃ£o participaram.csv', header=T)
cls
clear
clear()
cls()
dados1 = read.csv('RStudio/saed/NÃ£o participaram.csv', header=T)
dados1 = read.csv('RStudio/saed/NÃ£o participaram.csv', header="T")
dados1 = read.csv("RStudio/saed/NÃ£o participaram.csv", header="T")
dados1 = read.xls("RStudio/saed/NÃ£o participaram.xlsx", header="T")
library(XLConnect)
data1 <- readWorksheet(loadWorkbook("RStudio/saed/NÃ£o participaram.xlsx"),sheet=1)
require(xlsReadWrite)
xls.getshlib()
df = read.xls("RStudio/saed/Participaram.xlsx", sheet = 1)
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
df = read.xls("RStudio/saed/Participaram.xlsx", sheet = 1)
df = read.xlsx("RStudio/saed/Participaram.xlsx", sheet = 1)
install.packages("xlsx")
df = read.xlsx("RStudio/saed/Participaram.xlsx", sheet = 1)
install.packages("xlsx")
theData <- readWorksheet(loadWorkbook("RStudio/saed/Participaram.xlsx"),sheet=1)
library(XLConnect)
install.library(XLConnect)
dat <- read.xlsx("RStudio/saed/Participaram.xlsx", sheetName="")
library(xlsx)
library(xlsx)
library(xlsx)
install.packages("rJava")
library(xlsx)
dat <- read.xlsx("RStudio/saed/Participaram.xlsx", sheetName="")
library(xlsx)
dat <- read.xlsx("RStudio/saed/Participaram.xlsx", sheetName="")
library(xlsx)
dat <- read.xlsx("RStudio/saed/Participaram.xlsx", sheetName="")
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7')
library(xlsx)
dat1 <- read.xlsx("RStudio/saed/Participaram.xlsx", sheetName="")
dat1 <- read.xlsx("RStudio/saed/NÃ£o participaram.xlsx", sheetName="")
dat1 <- read.xlsx("Participaram.xlsx", sheetName="")
library(XLConnect)
install.packages("XLConnect")
library(XLConnect)
theData1 <- readWorksheet(loadWorkbook("Participaram.xlsx"),sheet=1)
theData2 <- readWorksheet(loadWorkbook(RStudio/saed/"NÃ£o participaram.xlsx"),sheet=1)
sumarry(theData1)
sumary(theData1)
summary(theData1)
theData1 <- readWorksheet(loadWorkbook("NÃ£o participaram.xlsx"),sheet=1)
summary(theData1)
'''FunÃƒÂ§ÃƒÂ£o para desenhar o intervalo de confianÃƒÂ§a para proporÃƒÂ§ÃƒÂµes
param conf_level: nÃƒ­vel de confianÃƒÂ§a
param app: alunos com bom desempenho???????????
param rep: alunos com mal desempenho??????????????
param nQuestions: nÃƒÂºmero de questÃƒÂµes????????????????????
'''
plotConfIntervalsForProportions <- function(conf_level, app, rep, nQuestions){
source("plotConfIntervalsForProportions.r")
'''FunÃƒÂ§ÃƒÂ£o para desenhar o intervalo de confianÃƒÂ§a para proporÃƒÂ§ÃƒÂµes
param conf_level: nÃƒ­vel de confianÃƒÂ§a
param app: alunos com bom desempenho???????????
param rep: alunos com mal desempenho??????????????
param nQuestions: nÃƒÂºmero de questÃƒÂµes????????????????????
'''
plotConfIntervalsForProportions <- function(conf_level, app, rep, nQuestions){
#inspirado no cÃƒÂ³digo http://www.math.hawaii.edu/~grw/Classes/2013-2014/2014Spring/Math472_1/MyPlotCI.html
source('conf_interv_function_proportions.R')
source('getContingencyTables.R')
require(plotrix) #which contains the plotCI function
contTables = getContingencyTables(app, rep)
app_m = data.matrix(app)
rep_m = data.matrix(rep)
n_app = dim(app)
n_app = n_app[1]
n_rep = dim(rep)
n_rep = n_rep[1]
y = matrix(ncol=2*nQuestions, nrow=1)
my_ci = matrix(nrow=2, ncol=2*nQuestions)
z = matrix(nrow=1, ncol=2*nQuestions)
question = 1
loop_end = seq(1, 2*nQuestions, by=2)
for (index in loop_end) {
x_app = contTables[question, 5]/n_app #bom_des_bom_rel, bom_des_mau_rel, bom_des_rel_indef, mau_des_bom_rel, mau_des_mau_rel, mau_des_rel_indef
x_rep = contTables[question, 4]/n_rep #bom_des_bom_rel, bom_des_mau_rel, bom_des_rel_indef, mau_des_bom_rel, mau_des_mau_rel, mau_des_rel_indef
pooled_estimate = (x_app + x_rep)/(n_app + n_rep) # pÃƒÂ¡gina 272 do livro prob stats online
y[1,index] = x_app
y[1, index+1] = x_rep
my_ci_app = conf_interv_function_proportions(conf_level, pooled_estimate, x_app, n_app, n_rep)
my_ci_rep = conf_interv_function_proportions(conf_level, pooled_estimate, x_rep, n_app, n_rep)
my_ci[1,index] = my_ci_app[1,1]
my_ci[2,index] = my_ci_app[2,1]
my_ci[1,index+1] = my_ci_rep[1,1]
my_ci[2,index+1] = my_ci_rep[2,1]
z[1,index] = "Blue"
z[1, index+1] = "Red"
question = question+1
}
x = seq(1, 2*nQuestions, by=1)
setEPS()
postscript('conf_intervals_proportions.eps')
plotCI(x = x, y = y, li = my_ci[1, ], ui = my_ci[2, ], col = z, lwd = 3, ylim = c(-0.1, 1.5))
grid(nx = 14, ny = 5, col = "lightgray", lty = "dotted", lwd = par("lwd"), equilogs = TRUE)
dev.off();
}
source("plotConfIntervalsForProportions.r")
source("plotConfIntervalsForProportions.r")
source("plotConfIntervalsForProportions.r")
source("plotConfIntervalsForProportions.r")
source("plotConfIntervalsForProportions.r")
source("plotConfIntervalsForProportions.r")
source("plotConfIntervalsForProportions.r")
source("plotConfIntervalsForProportions.r")
source("plotConfIntervalsForProportions.r")
plotConfIntervalsForProportions(0.95,28,22,21)
plotConfIntervalsForProportions(0.95,28,22,21)
install.packages("plotrix")
plotConfIntervalsForProportions(0.95,28,22,21)
plotConfIntervalsForProportions(0.95,28,22,21)
plotConfIntervalsForProportions(0.95,28,22,21)
source('conf_interv_function_proportions.r')
conf_interv_function_proportions(0.95,28,22,21)
conf_interv_function_proportions(0.95,28,22,21)
source('plotConfIntervalsForProportions.R')
plotConfIntervalsForProportions(0.95,28,22,21)
plotConfIntervalsForProportions(0.95,28,22,21)
plotConfIntervalsForProportions(0.95,28,22,21)
sum(app$q1 == 1)
sum(28$q1 == 1)
sum(28$'q1' == 1)
sum(28$q1 == 1)
sum(28$q1 == 1)
sum(app$q1 == 1)
sum(q1$app == 1)
sum(q1$28 == 1)
sum(28$q1 == 1)
sum(28$'q1' == 1)
plotConfIntervalsForProportions(0.95,28,22,21)
plotConfIntervalsForProportions(0.95,28,22,21)
app <- [28]
app <- (28)
app$q1
sum(app$q1)
app <- list(28)
app$q1
sum(app$q1)
plotConfIntervalsForProportions(0.95,28,22,21)
plotConfIntervalsForProportions(0.95,28,22,21)
plotConfIntervalsForProportions(0.95,28,22,21)
plotConfIntervalsForProportions(0.95,28,22,21)
